generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_PROD")
}

model User {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  email       String      @unique
  firstName   String
  lastName    String
  role        Role        @default(USER)
  phoneNumber String?
  membership  Membership?
  bankroll    Int       
  unitSize    Int
  emailNotifs Boolean @default(false)
  discordId   String?
  telegramId  String?
              
}

model Membership {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  expiresAt DateTime?
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [id])
}

model Pick {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  startTime String
  homeTeam  String
  awayTeam  String
  homeTeamLogo String
  awayTeamLogo String
  pick    String
  unit    Float
  status  String  @default("pending") 
  toWin   Float   @default(0.0)       
  result  String
  leagueLogo  String?
  eventId String?
  net Float @default(0.0)  
}

enum Role {
  USER
  ADMIN
}

model UnitCount {
  id           Int          @id @default(autoincrement())
  netUnits     Float
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  dailyUnits   DailyUnit[]
}

model DailyUnit {
  id          Int        @id @default(autoincrement())
  date        DateTime   @default(now())
  netUnits    Float
  unitCountId Int
  unitCount   UnitCount  @relation(fields: [unitCountId], references: [id])
}